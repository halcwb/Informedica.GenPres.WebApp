/*
 * File: app/view/UserGrid.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GenPres.view.UserGrid', {
    extend: 'Ext.grid.Panel',

    height: 294,
    width: 410,
    title: 'Users',
    store: 'UserStore',
    requires: [
        'GenPres.store.UserStore'
    ],
    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 197,
                    dataIndex: 'username',
                    text: 'Username',
                    editor: {
                        xtype: 'textfield',
                        allowBlank: false
                    }
                },
                {
                    xtype: 'gridcolumn',
                    width: 211,
                    dataIndex: 'password',
                    text: 'Password',
                    editor: {
                        xtype: 'textfield',
                        allowBlank: false
                    }
                 }
            ],
            selType: 'rowmodel',
            plugins: [
                Ext.create('Ext.grid.plugin.RowEditing', {
                    clicksToEdit: 2
                })
            ],
            viewConfig: {

            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            action:'new',
                            text: 'New'
                        },
                        {
                            xtype: 'button',
                            action: 'edit',
                            text: 'Edit'
                        },
                        {
                            xtype: 'button',
                            action: 'delete ',
                            text: 'Delete'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});